[{"E:\\react-player\\src\\index.js":"1","E:\\react-player\\src\\App.js":"2","E:\\react-player\\src\\reportWebVitals.js":"3","E:\\react-player\\src\\components\\Song.js":"4","E:\\react-player\\src\\components\\Player.js":"5","E:\\react-player\\src\\components\\Library.js":"6","E:\\react-player\\src\\components\\LibrarySong.js":"7","E:\\react-player\\src\\components\\Nav.js":"8","E:\\react-player\\src\\data.js":"9"},{"size":478,"mtime":1607062884047,"results":"10","hashOfConfig":"11"},{"size":2250,"mtime":1607404748067,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":296,"mtime":1607158735307,"results":"14","hashOfConfig":"11"},{"size":3429,"mtime":1607404441900,"results":"15","hashOfConfig":"11"},{"size":790,"mtime":1607317545000,"results":"16","hashOfConfig":"11"},{"size":1124,"mtime":1607404410545,"results":"17","hashOfConfig":"11"},{"size":479,"mtime":1607317338633,"results":"18","hashOfConfig":"11"},{"size":3917,"mtime":1607324462084,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1aehcfs",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"E:\\react-player\\src\\index.js",[],["41","42"],"E:\\react-player\\src\\App.js",[],"E:\\react-player\\src\\reportWebVitals.js",[],"E:\\react-player\\src\\components\\Song.js",[],"E:\\react-player\\src\\components\\Player.js",["43","44"],"import React , {useState,useEffect} from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay,faAngleLeft,faAngleRight,faPause } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Player = ({ audioRef, currentSong, isPlaying, setIsPlaying,setSongInfo, songInfo,songs,setCurrentSong,setSongs}) => {\r\n\r\n  //UseEffect\r\n  useEffect(() => {\r\n    //Add active state\r\n    const newSongs =songs.map((song) => {\r\n      if(song.id === currentSong.id){\r\n        return{\r\n          ...song,\r\n          active:true,\r\n        };\r\n\r\n      }else{\r\n        return{\r\n          ...song,\r\n          active:false,\r\n        }\r\n      }\r\n    })\r\n    setSongs(newSongs);\r\n\r\n  },[currentSong]);\r\n  \r\n  //Event Handlers\r\n  const playSongHandler = () => {\r\n    if(isPlaying){\r\n\r\n          audioRef.current.pause();\r\n          setIsPlaying(!isPlaying)\r\n\r\n    }\r\n    else{\r\n          audioRef.current.play();\r\n          setIsPlaying(!isPlaying);\r\n\r\n\r\n    }\r\n\r\n  };\r\n\r\n  const dragHandler = (e) =>{\r\n\r\n\r\n    // console.log(e)\r\n    audioRef.current.currentTime = e.target.value\r\n    setSongInfo({...songInfo , currentTime : e.target.value})\r\n\r\n  }\r\n  const skipTrackHandler = async (direction) =>{\r\n    let currentIndex = songs.findIndex((song) => song.id===currentSong.id)\r\n    if(direction === 'skip-forward'){\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      // console.log(`next index ${currentIndex + 1}`)\r\n      // console.log(`songs length ${songs.length + 1}`)\r\n\r\n\r\n    }\r\n    if(direction === 'skip-back'){\r\n      if((currentIndex - 1) % songs.length === -1){\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n                if (isPlaying) audioRef.current.play();\r\n\r\n\r\n        return;\r\n      }\r\n          await  setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n\r\n      \r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n  const getTime = (time) =>{\r\n    return(\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    )\r\n  }\r\n  //add styles\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"players\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n\r\n        <div style={{background : `linear-gradient(to right,${currentSong.color[0]},${currentSong.color[1]})`}} className=\"track\">\r\n          <input\r\n            onChange={dragHandler}\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n          />\r\n\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration? getTime(songInfo.duration): \"0:00\"}</p>\r\n      </div>\r\n\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Player","E:\\react-player\\src\\components\\Library.js",["45"],"import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport React from 'react'\r\nimport LibrarySong from './LibrarySong'\r\n\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'active-library':''}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            setSongs={setSongs}\r\n            isPlaying={isPlaying}\r\n            songs={songs}\r\n            id={song.id}\r\n            key={song.id}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            audioRef={audioRef}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Library;","E:\\react-player\\src\\components\\LibrarySong.js",[],"E:\\react-player\\src\\components\\Nav.js",[],"E:\\react-player\\src\\data.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"55","line":27,"column":5,"nodeType":"56","endLine":27,"endColumn":18,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"58","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":17},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["61"],"'library' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"64","text":"65"},[694,707],"[currentSong, setSongs, songs]"]